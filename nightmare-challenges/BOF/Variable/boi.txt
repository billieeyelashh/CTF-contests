input is stored at offset -0x38
target is stored at offset -0x24

that means 14 bytes difference between those values we can overflow the 14 bytes with 18bytes and those 4 extra bytes ooverflowing into the target -> that means we can change target.

for we need to transfer the hexformat into an elf readable format

	- from pwn import *
	p232(0xcaf3baeee)

	\xee\xba\xf3\xca > input

- 0x00007fffffffde20â”‚+0x0020: 0xdeadbeef00000000
	-> we can see that this line is overwriteen with 0xcaf3baee


- we can give out the value of the eax register and it's -xaf3baee


# Sum up variable exploit

All in all I must overflow the 14 byte sized input value with 18 bytes where I cahnge the last bytes to 0xcaf3baee wich equals 0x350c4512 in memory.
After that is done we can see that 0xdeadbeef is overwirtten with 0xcaf3baee.




